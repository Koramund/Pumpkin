array [1..20] of int: X_INTRODUCED_50_ = [3,5,2,8,6,7,1,9,4,10,2,5,3,6,7,1,8,4,9,10];
var 0..100: X_INTRODUCED_0_;
var 0..100: X_INTRODUCED_1_;
var 0..100: X_INTRODUCED_2_;
var 0..100: X_INTRODUCED_3_;
var 0..100: X_INTRODUCED_4_;
var 0..100: X_INTRODUCED_5_;
var 0..100: X_INTRODUCED_6_;
var 0..100: X_INTRODUCED_7_;
var 0..100: X_INTRODUCED_8_;
var 0..100: X_INTRODUCED_9_;
var 0..100: X_INTRODUCED_10_;
var 0..100: X_INTRODUCED_11_;
var 0..100: X_INTRODUCED_12_;
var 0..100: X_INTRODUCED_13_;
var 0..100: X_INTRODUCED_14_;
var 0..100: X_INTRODUCED_15_;
var 0..100: X_INTRODUCED_16_;
var 0..100: X_INTRODUCED_17_;
var 0..100: X_INTRODUCED_18_;
var 0..100: X_INTRODUCED_19_;
var 0..2000: obj:: is_defined_var;
array [1..20] of var int: x:: output_array([1..20]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_];
constraint int_lin_le(X_INTRODUCED_50_,x,150);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,obj],0):: defines_var(obj);
solve :: int_search(x,input_order,indomain_median,complete) maximize obj;
